# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

ARG DISTRO_VERSION=30
FROM fedora:${DISTRO_VERSION} AS devtools

# Fedora includes packages for gRPC, libcurl, and OpenSSL that are recent enough
# for `google-cloud-cpp`. Install these packages and additional development
# tools to compile the dependencies:
RUN dnf makecache && \
    dnf install -y cmake gcc-c++ git make grpc-devel grpc-plugins \
        libcurl-devel openssl-devel pkgconfig protobuf-compiler \
        tar wget zlib-devel

# There is no Fedora package for CRC32C, download and install from source.
WORKDIR /var/tmp/build
RUN wget -q https://github.com/google/crc32c/archive/1.0.6.tar.gz
RUN tar -xf 1.0.6.tar.gz
WORKDIR /var/tmp/build/crc32c-1.0.6
RUN cmake \
      -DCMAKE_BUILD_TYPE=Release \
      -DBUILD_SHARED_LIBS=yes \
      -DCRC32C_BUILD_TESTS=OFF \
      -DCRC32C_BUILD_BENCHMARKS=OFF \
      -DCRC32C_USE_GLOG=OFF \
      -H. -Bcmake-out/crc32c
RUN cmake --build cmake-out/crc32c --target install -- -j $(nproc)
RUN ldconfig

# Download and compile googletest, we need a recent version.
WORKDIR /var/tmp/build
RUN wget -q https://github.com/google/googletest/archive/b6cd405286ed8635ece71c72f118e659f4ade3fb.tar.gz
RUN tar -xf b6cd405286ed8635ece71c72f118e659f4ade3fb.tar.gz
WORKDIR /var/tmp/build/googletest-b6cd405286ed8635ece71c72f118e659f4ade3fb
RUN cmake \
        -H. -Bcmake-out/gtest
RUN cmake --build cmake-out/gtest --target install -- -j $(nproc)

# Download and compile googleapis/cpp-cmakefiles:

WORKDIR /var/tmp/build
RUN wget -q https://github.com/googleapis/cpp-cmakefiles/archive/v0.1.4.tar.gz
RUN tar -xf v0.1.4.tar.gz
WORKDIR /var/tmp/build/cpp-cmakefiles-0.1.4
# Compile without the tests because we are testing spanner, not the base
# libraries
RUN cmake -H. -Bcmake-out \
    -DBUILD_TESTING=OFF \
    -DGOOGLE_CLOUD_CPP_TESTING_UTIL_ENABLE_INSTALL=ON
RUN cmake --build cmake-out -- -j $(nproc)
RUN cmake --build cmake-out --target install


# Download and compile google-cloud-cpp from source too:
WORKDIR /var/tmp/build
RUN wget -q https://github.com/googleapis/google-cloud-cpp/archive/7c4f218dbd9e1fbe08bc7187347d4da80198ec0a.tar.gz
RUN tar -xf 7c4f218dbd9e1fbe08bc7187347d4da80198ec0a.tar.gz
WORKDIR /var/tmp/build/google-cloud-cpp-7c4f218dbd9e1fbe08bc7187347d4da80198ec0a
# Compile without the tests because we are testing spanner, not the base
# libraries
RUN cmake -H. -Bcmake-out \
    -DBUILD_TESTING=OFF \
    -DGOOGLE_CLOUD_CPP_TESTING_UTIL_ENABLE_INSTALL=ON
RUN cmake --build cmake-out -- -j $(nproc)
RUN cmake --build cmake-out --target install

FROM devtools AS install

WORKDIR /home/build/google-cloud-cpp-spanner
COPY . /home/build/google-cloud-cpp-spanner
RUN cmake -DCMAKE_INSTALL_PREFIX=/home/build/google-cloud-spanner-install \
    -H. -Bcmake-out
RUN cmake --build cmake-out -- -j $(nproc)
WORKDIR /home/build/google-cloud-cpp-spanner/cmake-out
RUN ctest -LE integration-tests --output-on-failure
RUN cmake --build . --target install

# Verify that the installed files are actually usable
WORKDIR /home/build/test-install-cmake
ENV LD_LIBRARY_PATH=/home/build/google-cloud-spanner-install/lib64
COPY ci/test-install /home/build/test-install-cmake
RUN env -u PKG_CONFIG_PATH cmake \
    -DCMAKE_PREFIX_PATH=/home/build/google-cloud-spanner-install \
    -H. -B/o
RUN cmake --build /o -- -j $(nproc)
